import tkinter as tk
from tkinter import filedialog, messagebox
from PIL import Image, ImageTk
import os

class ImageViewer:
    def __init__(self, master):
        self.master = master
        self.master.title("Simple Image Viewer, By satyam")
        self.master.geometry("800x600")

        self.image_list = []
        self.current_image = 0

        self.create_widgets()

    def create_widgets(self):
        # Frame for image display
        self.image_frame = tk.Frame(self.master, bg="black")
        self.image_frame.pack(side=tk.TOP, fill=tk.BOTH, expand=True)

        # Label to display the image
        self.image_label = tk.Label(self.image_frame, bg="black")
        self.image_label.pack(fill=tk.BOTH, expand=True)

        # Frame for buttons
        button_frame = tk.Frame(self.master)
        button_frame.pack(side=tk.BOTTOM, fill=tk.X, padx=10, pady=10)

        # Buttons
        tk.Button(button_frame, text="Open Folder", command=self.open_folder).pack(side=tk.LEFT)
        tk.Button(button_frame, text="Previous", command=self.show_previous).pack(side=tk.LEFT, padx=5)
        tk.Button(button_frame, text="Next", command=self.show_next).pack(side=tk.LEFT)
        tk.Button(button_frame, text="Exit", command=self.master.quit).pack(side=tk.RIGHT)

    def open_folder(self):
        folder_path = filedialog.askdirectory()
        if folder_path:
            self.image_list = []
            for filename in os.listdir(folder_path):
                if filename.lower().endswith(('.png', '.jpg', '.jpeg', '.gif', '.bmp')):
                    self.image_list.append(os.path.join(folder_path, filename))
            
            if self.image_list:
                self.current_image = 0
                self.show_image()
            else:
                messagebox.showinfo("Info", "No images found in the selected folder.")

    def show_image(self):
        if 0 <= self.current_image < len(self.image_list):
            image_path = self.image_list[self.current_image]
            image = Image.open(image_path)
            
            # Resize image to fit the window while maintaining aspect ratio
            image.thumbnail((780, 520))
            
            photo = ImageTk.PhotoImage(image)
            self.image_label.config(image=photo)
            self.image_label.image = photo  # Keep a reference
            
            self.master.title(f"Simple Image Viewer - {os.path.basename(image_path)}")
        else:
            self.image_label.config(image=None)
            self.master.title("Simple Image Viewer")

    def show_previous(self):
        if self.image_list:
            self.current_image = (self.current_image - 1) % len(self.image_list)
            self.show_image()

    def show_next(self):
        if self.image_list:
            self.current_image = (self.current_image + 1) % len(self.image_list)
            self.show_image()

if __name__ == "__main__":
    root = tk.Tk()
    app = ImageViewer(root)
    root.mainloop()

